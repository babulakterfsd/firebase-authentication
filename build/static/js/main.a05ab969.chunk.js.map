{"version":3,"sources":["Firebase/firebase.config.js","Firebase/firebase.initialize.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","initializeAuthentication","initializeApp","googleProvider","GoogleAuthProvider","githubProvider","GithubAuthProvider","facebookProvider","FacebookAuthProvider","auth","getAuth","App","useState","user","setUser","name","setName","userEmail","setUserEmail","userPassword","setUserPassword","error","setError","passwordRulesShow","setPasswordRulesShow","response","setResponse","isRegistered","setIsRegistered","login","email","password","signInWithEmailAndPassword","then","result","console","log","catch","message","register","length","createUserWithEmailAndPassword","updateUser","verifyEmail","sendEmailVerification","currentUser","updateProfile","displayName","className","Container","Row","Form","onSubmit","event","preventDefault","Group","controlId","Label","Control","onBlur","target","value","type","placeholder","required","Text","Check","onChange","checked","label","Button","onClick","sendPasswordResetEmail","variant","Col","Card","Title","Img","src","photo","style","height","width","borderRadius","display","margin","Body","Footer","signOut","signInWithPopup","photoURL","alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQASeA,EATQ,CACrBC,OAAQ,0CACRC,WAAY,2CACZC,UAAW,2BACXC,cAAe,uCACfC,kBAAmB,cACnBC,MAAO,4CCCMC,EAJkB,WAC/BC,YAAcR,I,uDCchBO,IAEA,IAAME,EAAiB,IAAIC,IACrBC,EAAiB,IAAIC,IACrBC,EAAmB,IAAIC,IACvBC,EAAOC,cA6SEC,MA3Sf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAwCN,mBAAS,IAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAA0BR,mBAAS,IAAnC,mBAAOS,EAAP,KAAcC,EAAd,KACA,EAAgDV,oBAAS,GAAzD,mBAAKW,EAAL,KAAwBC,EAAxB,KACA,EAA8BZ,mBAAS,IAAvC,mBAAKa,EAAL,KAAeC,EAAf,KACA,EAAsCd,oBAAS,GAA/C,mBAAKe,EAAL,KAAmBC,EAAnB,KA8CMC,EAAQ,SAACC,EAAOC,GACpBC,YAA2BvB,EAAMqB,EAAOC,GACrCE,MAAK,SAACC,GACL,IAAMrB,EAAOqB,EAAOrB,KACpBsB,QAAQC,IAAIvB,GACZa,EAAY,uBAEbW,OAAM,SAAChB,GACNK,EAAYL,EAAMiB,aAKlBC,EAAW,SAACT,EAAOC,GACnBZ,EAAaqB,OAAS,EACxBlB,EAAS,2CAGTA,EAAS,IACTmB,YAA+BhC,EAAMqB,EAAOC,GACzCE,MAAK,SAACC,GACL,IAAMrB,EAAOqB,EAAOrB,KACpBsB,QAAQC,IAAIvB,GACZa,EAAY,2BACZgB,IACAC,OAEDN,OAAM,SAAChB,GACNK,EAAYL,EAAMiB,cAKpBK,EAAc,WAClBC,YAAsBnC,EAAKoC,cA2BvBH,EAAa,WACjBI,YAAcrC,EAAKoC,YAAa,CAC9BE,YAAahC,KAcjB,OACE,sBAAKiC,UAAU,MAAf,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,qBAAKF,UAAU,mCAAf,SACE,eAACG,EAAA,EAAD,CACEH,UAAU,gCACVI,SA5FS,SAACC,GACpBA,EAAMC,iBACL3B,EAEGE,EAAMZ,EAAWE,GADjBoB,EAAStB,EAAWE,IAuFhB,UAIE,qBAAI6B,UAAU,sBAAd,UACG,IACD,mBAAGA,UAAU,iCAFf,UAGIrB,EAAgC,WAAjB,kBAEjBA,EAWA,yBAVA,eAACwB,EAAA,EAAKI,MAAN,CAAYP,UAAU,OAAOQ,UAAU,OAAvC,UACE,cAACL,EAAA,EAAKM,MAAN,wBACA,cAACN,EAAA,EAAKO,QAAN,CACEC,OAvCC,SAACN,GAClBrC,EAAQqC,EAAMO,OAAOC,OACrB1B,QAAQC,IAAIiB,EAAMO,OAAOC,QAsCTC,KAAK,OACLC,YAAY,kBACZC,UAAQ,OAMd,eAACb,EAAA,EAAKI,MAAN,CAAYP,UAAU,OAAOQ,UAAU,QAAvC,UACE,cAACL,EAAA,EAAKM,MAAN,4BACA,cAACN,EAAA,EAAKO,QAAN,CACEC,OAvDI,SAACN,GACnBnC,EAAamC,EAAMO,OAAOC,QAuDZC,KAAK,QACLC,YAAY,cACZC,UAAQ,IAEV,cAACb,EAAA,EAAKc,KAAN,CAAWjB,UAAU,aAArB,+DAKF,eAACG,EAAA,EAAKI,MAAN,CAAYP,UAAU,OAAOQ,UAAU,WAAvC,UACE,cAACL,EAAA,EAAKM,MAAN,uBACA,cAACN,EAAA,EAAKO,QAAN,CACEC,OAlFO,SAACN,GACtBjC,EAAgBiC,EAAMO,OAAOC,QAkFfC,KAAK,WACLC,YAAY,WACZC,UAAQ,IAEV,cAACb,EAAA,EAAKc,KAAN,CAAWjB,UAAU,cAArB,SAAoC3B,IACpC,cAAC8B,EAAA,EAAKc,KAAN,CAAWjB,UAAU,cAArB,SACGzB,EACC,qBAAIyB,UAAU,aAAd,UACE,2EACA,6EACA,+EACA,kEACA,kFAGF,8BAIN,cAACG,EAAA,EAAKI,MAAN,CAAYP,UAAU,OAAOQ,UAAU,oBAAvC,SACE,sBAAKR,UAAU,iCAAf,UACE,cAACG,EAAA,EAAKe,MAAN,CACEC,SAtEC,SAACd,GAClBzB,EAAgByB,EAAMO,OAAOQ,UAsEbN,KAAK,WACLO,MAAM,wBAEN1C,EAQA,cAAC2C,EAAA,EAAD,CACEC,QAlHE,WAChBtD,GACFuD,YAAuB/D,EAAMQ,GAC7BS,EAAY,gCAEZA,EAAY,yBA8GIsB,UAAU,4CAFZ,8BAPA,cAACsB,EAAA,EAAD,CACEC,QAjFW,WAE7B/C,EADAD,GAAqBA,IAiFHyB,UAAU,6CAFZ,iCAgBN,mBAAGA,UAAU,iBAAb,SAA+BvB,IAC/B,eAAC6C,EAAA,EAAD,CAAQG,QAAQ,UAAUX,KAAK,SAASd,UAAU,YAAlD,UACE,mBAAGA,UAAU,yCACXrB,EAAgC,WAAjB,2BAO3B,sBAAKqB,UAAU,UAAf,UACE,oBAAIA,UAAU,iBACd,oBAAIA,UAAU,6BAAd,mBAEF,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACIrC,EAAKE,KA2BL,cAAC2D,EAAA,EAAD,CAAK1B,UAAU,mCAAf,SACE,eAAC2B,EAAA,EAAD,CAAM3B,UAAU,wBAAhB,UACE,eAAC2B,EAAA,EAAKC,MAAN,qBAEE,sBAAM5B,UAAU,eAAhB,oBAAoCnC,EAAKE,QAAe,OAE1D,cAAC4D,EAAA,EAAKE,IAAN,CACEJ,QAAQ,MACRK,IAAKjE,EAAKkE,MACV/B,UAAU,YACVgC,MAAO,CACLC,OAAQ,QACRC,MAAO,QACPC,aAAc,OACdC,QAAS,QACTC,OAAQ,UAGZ,cAACV,EAAA,EAAKW,KAAN,UACE,cAACX,EAAA,EAAKV,KAAN,UAAYpD,EAAKiB,UAEnB,cAAC6C,EAAA,EAAKY,OAAN,UACE,cAACjB,EAAA,EAAD,CACEC,QArPI,WACpBiB,YAAQ/E,GAAMwB,MAAK,WACjBnB,EAAQ,QAoPMkC,UAAU,+CAFZ,2BAhDN,qBAAKA,UAAU,oCAAf,SACE,sBAAKA,UAAU,iDAAf,UACE,eAACsB,EAAA,EAAD,CACEtB,UAAU,iCACVuB,QApOW,WACzBkB,YAAgBhF,EAAMN,GACnB8B,MAAK,SAACC,GACL,MAAsDA,EAAOrB,KAAxCE,EAArB,EAAQgC,YAAmBjB,EAA3B,EAA2BA,MAAiBiD,EAA5C,EAAkCW,SAElC5E,EADqB,CAAEC,OAAMe,QAAOiD,aAGrC1C,OAAM,SAAChB,GAAD,OAAWsE,MAAMtE,EAAMiB,aA2NpB,UAIE,mBAAGU,UAAU,oCAJf,wBAOA,eAACsB,EAAA,EAAD,CACEtB,UAAU,iCACVuB,QAjOa,WAC3BkB,YAAgBhF,EAAMF,GAAkB0B,MAAK,SAACC,GAC5C,MAAsDA,EAAOrB,KAAxCE,EAArB,EAAQgC,YAAmBjB,EAA3B,EAA2BA,MAAiBiD,EAA5C,EAAkCW,SAElC5E,EADqB,CAAEC,OAAMe,QAAOiD,cA4N1B,UAIE,mBAAG/B,UAAU,sCAJf,0BAOA,eAACsB,EAAA,EAAD,CACEtB,UAAU,2BACVuB,QA/NW,WACzBkB,YAAgBhF,EAAMJ,GAAgB4B,MAAK,SAACC,GAC1C,MAAsDA,EAAOrB,KAAxCE,EAArB,EAAQgC,YAAmBjB,EAA3B,EAA2BA,MAAiBiD,EAA5C,EAAkCW,SAElC5E,EADqB,CAAEC,OAAMe,QAAOiD,cA0N1B,UAIE,mBAAG/B,UAAU,oCAJf,qCCxQD4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7D,MAAK,YAAkD,IAA/C8D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a05ab969.chunk.js","sourcesContent":["const firebaseConfig = {\r\n  apiKey: \"AIzaSyA_1Qo_I1UYzW-KH4pI4bMUcyJRo7rD-lA\",\r\n  authDomain: \"fir-authentication-f4897.firebaseapp.com\",\r\n  projectId: \"fir-authentication-f4897\",\r\n  storageBucket: \"fir-authentication-f4897.appspot.com\",\r\n  messagingSenderId: \"92605586204\",\r\n  appId: \"1:92605586204:web:6fe770277e4046f26878d9\",\r\n};\r\n\r\nexport default firebaseConfig;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport firebaseConfig from \"./firebase.config\";\r\n\r\nconst initializeAuthentication = () => {\r\n  initializeApp(firebaseConfig);\r\n};\r\n\r\nexport default initializeAuthentication;\r\n","import \"./App.css\";\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  GithubAuthProvider,\n  signOut,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  sendEmailVerification,\n  sendPasswordResetEmail,\n  updateProfile,\n  FacebookAuthProvider,\n} from \"firebase/auth\";\nimport initializeAuthentication from \"./Firebase/firebase.initialize\";\nimport { Container, Row, Button, Col, Card, Form } from \"react-bootstrap\";\nimport { useState } from \"react\";\n\ninitializeAuthentication();\n\nconst googleProvider = new GoogleAuthProvider();\nconst githubProvider = new GithubAuthProvider();\nconst facebookProvider = new FacebookAuthProvider();\nconst auth = getAuth();\n\nfunction App() {\n  const [user, setUser] = useState({});\n  const [name, setName] = useState(\"\");\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  let [passwordRulesShow, setPasswordRulesShow] = useState(false);\n  let [response, setResponse] = useState(\"\");\n  let [isRegistered, setIsRegistered] = useState(false);\n\n  //google signin button\n  const handleGoogleSignIn = () => {\n    signInWithPopup(auth, googleProvider)\n      .then((result) => {\n        const { displayName: name, email, photoURL: photo } = result.user;\n        const loggedInUser = { name, email, photo };\n        setUser(loggedInUser);\n      })\n      .catch((error) => alert(error.message));\n  };\n  //facebook signin button\n  const handleFacebookSignIn = () => {\n    signInWithPopup(auth, facebookProvider).then((result) => {\n      const { displayName: name, email, photoURL: photo } = result.user;\n      const loggedInUser = { name, email, photo };\n      setUser(loggedInUser);\n    });\n  };\n\n  //github signin button\n  const handleGithubSignIn = () => {\n    signInWithPopup(auth, githubProvider).then((result) => {\n      const { displayName: name, email, photoURL: photo } = result.user;\n      const loggedInUser = { name, email, photo };\n      setUser(loggedInUser);\n    });\n  };\n\n  //handle SignOut\n  const handleSignOut = () => {\n    signOut(auth).then(() => {\n      setUser({});\n    });\n  };\n\n  //handle Submit\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    !isRegistered\n      ? register(userEmail, userPassword)\n      : login(userEmail, userPassword);\n  };\n\n  //login existing user\n  const login = (email, password) => {\n    signInWithEmailAndPassword(auth, email, password)\n      .then((result) => {\n        const user = result.user;\n        console.log(user);\n        setResponse(\"Login Successful\");\n      })\n      .catch((error) => {\n        setResponse(error.message);\n      });\n  };\n\n  //create new user\n  const register = (email, password) => {\n    if (userPassword.length < 8) {\n      setError(\"password must be at least 8 characters\");\n      return;\n    } else {\n      setError(\"\");\n      createUserWithEmailAndPassword(auth, email, password)\n        .then((result) => {\n          const user = result.user;\n          console.log(user);\n          setResponse(\"Registration Successful\");\n          updateUser();\n          verifyEmail();\n        })\n        .catch((error) => {\n          setResponse(error.message);\n        });\n    }\n  };\n  //verify email\n  const verifyEmail = () => {\n    sendEmailVerification(auth.currentUser);\n  };\n\n  //handle Password\n  const handlePassword = (event) => {\n    setUserPassword(event.target.value);\n  };\n  //reset forgot password\n  const resetPassword = () => {\n    if (userEmail) {\n      sendPasswordResetEmail(auth, userEmail);\n      setResponse(\"Password reset email sent !\");\n    } else {\n      setResponse(\"Email field is empty\");\n    }\n  };\n\n  //handle Email\n  const handleEmail = (event) => {\n    setUserEmail(event.target.value);\n  };\n  //handle Name\n  const handleName = (event) => {\n    setName(event.target.value);\n    console.log(event.target.value);\n  };\n  //update user info\n  const updateUser = () => {\n    updateProfile(auth.currentUser, {\n      displayName: name,\n    });\n  };\n\n  // passwordRulesDisplayer\n  const passwordRulesDisplayer = () => {\n    passwordRulesShow = !passwordRulesShow;\n    setPasswordRulesShow(passwordRulesShow);\n  };\n  //ToggleForm\n  const toggleForm = (event) => {\n    setIsRegistered(event.target.checked);\n  };\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <Row>\n          <div className=\"col-12 col-md-8 col-lg-6 mx-auto\">\n            <Form\n              className=\"mt-2 shadow-sm pt-3 pb-5 px-5\"\n              onSubmit={handleSubmit}\n            >\n              <h5 className=\"text-secondary mb-3\">\n                {\" \"}\n                <i className=\"fas fa-user-tie text-success\"></i> Please\n                {!isRegistered ? \" Resgister !\" : \" LogIn !\"}\n              </h5>\n              {!isRegistered ? (\n                <Form.Group className=\"mb-3\" controlId=\"name\">\n                  <Form.Label>Your Name</Form.Label>\n                  <Form.Control\n                    onBlur={handleName}\n                    type=\"text\"\n                    placeholder=\"Enter Your Name\"\n                    required\n                  />\n                </Form.Group>\n              ) : (\n                <span></span>\n              )}\n              <Form.Group className=\"mb-3\" controlId=\"email\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control\n                  onBlur={handleEmail}\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  required\n                />\n                <Form.Text className=\"text-muted\">\n                  We'll never share your email with anyone else.\n                </Form.Text>\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  onBlur={handlePassword}\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  required\n                />\n                <Form.Text className=\"text-danger\">{error}</Form.Text>\n                <Form.Text className=\"text-danger\">\n                  {passwordRulesShow ? (\n                    <ul className=\"text-muted\">\n                      <li>Password must contain 2 uppercase letters</li>\n                      <li>must incluse at least one special character</li>\n                      <li>must contain at least three lowercase letters</li>\n                      <li>must incluse at least two digits</li>\n                      <li>Password should be at least 8 characters long</li>\n                    </ul>\n                  ) : (\n                    <span></span>\n                  )}\n                </Form.Text>\n              </Form.Group>\n              <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n                <div className=\"d-flex justify-content-between\">\n                  <Form.Check\n                    onChange={toggleForm}\n                    type=\"checkbox\"\n                    label=\"Already Registered?\"\n                  />\n                  {!isRegistered ? (\n                    <Button\n                      onClick={passwordRulesDisplayer}\n                      className=\"btn-sm btn-success text-white fw-semi-bold\"\n                    >\n                      password rules\n                    </Button>\n                  ) : (\n                    <Button\n                      onClick={resetPassword}\n                      className=\"btn-sm btn-danger text-white fw-semi-bold\"\n                    >\n                      Forgot password?\n                    </Button>\n                  )}\n                </div>\n              </Form.Group>\n              <p className=\"text-secondary\">{response}</p>\n              <Button variant=\"success\" type=\"submit\" className=\"px-4 py-2\">\n                <i className=\"fas fa-sign-in-alt me-2 text-warning\"></i>\n                {!isRegistered ? \" Resgister !\" : \" LogIn !\"}\n              </Button>\n            </Form>\n          </div>\n        </Row>\n      </Container>\n\n      <div className=\"divider\">\n        <hr className=\"w-50 mx-auto\" />\n        <h6 className=\"text-center text-secondary\">or</h6>\n      </div>\n      <Container>\n        <Row>\n          {!user.name ? (\n            <div className=\"col-12 col-md-10 col-lg-8 mx-auto\">\n              <div className=\"button-container d-flex justify-content-center\">\n                <Button\n                  className=\"btn-success fw-semi-bold  me-1\"\n                  onClick={handleGoogleSignIn}\n                >\n                  <i className=\"fab fa-google me-2 text-warning\"></i>\n                  SignIn with Google\n                </Button>\n                <Button\n                  className=\"btn-success fw-semi-bold  me-1\"\n                  onClick={handleFacebookSignIn}\n                >\n                  <i className=\"fab fa-facebook me-2 text-warning\"></i>\n                  SignIn with Facebook\n                </Button>\n                <Button\n                  className=\"btn-success fw-semi-bold\"\n                  onClick={handleGithubSignIn}\n                >\n                  <i className=\"fab fa-github me-2 text-warning\"></i>\n                  SignIn with Github\n                </Button>\n              </div>\n            </div>\n          ) : (\n            <Col className=\"col-12 col-md-8 col-lg-4 mx-auto\">\n              <Card className=\"text-center pt-2 mt-5\">\n                <Card.Title>\n                  Welcome\n                  <span className=\"text-success\">{` ${user.name}`}</span>{\" \"}\n                </Card.Title>\n                <Card.Img\n                  variant=\"top\"\n                  src={user.photo}\n                  className=\"img-fluid\"\n                  style={{\n                    height: \"150px\",\n                    width: \"150px\",\n                    borderRadius: \"100%\",\n                    display: \"block\",\n                    margin: \"auto\",\n                  }}\n                />\n                <Card.Body>\n                  <Card.Text>{user.email}</Card.Text>\n                </Card.Body>\n                <Card.Footer>\n                  <Button\n                    onClick={handleSignOut}\n                    className=\"d-block mx-auto btn-danger fw-bold px-5 py-2\"\n                  >\n                    Logout\n                  </Button>\n                </Card.Footer>\n              </Card>\n            </Col>\n          )}\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}